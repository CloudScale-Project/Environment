import pcm2csmData;

modeltype OVERVIEW uses overview('http://org.scaledl.overview/ScaleDLOverviewComponentModel/1.0'); 
modeltype PCM uses pcm('http://palladiosimulator.org/PalladioComponentModel/5.1');
modeltype REPOSITORY uses pcm::repository('http://palladiosimulator.org/PalladioComponentModel/5.1');
modeltype ECORE uses "http://www.eclipse.org/emf/2002/Ecore";

transformation csm2pcm(in pcmInstance : PCM,
					   inout overviewInstance : OVERVIEW);
					  
configuration property moduleID : String;
configuration property CSMID : String;

configuration property PCM_REPOSITORY_KEY : String;
configuration property PCM_SYSTEM_KEY : String;
configuration property PCM_INTERFACE_KEY : String;
configuration property PCM_OPERATION_KEY : String;

main() {
	log("Transformation pcm2csmModule started!");
	
	var csmRoot : Overview := overviewInstance.rootObjects()![Overview];
	
	var systemRoot : pcm::system::System := pcmInstance.rootObjects()![pcm::system::System];
	var repositoryRoot : pcm::repository::Repository := pcmInstance.rootObjects()![pcm::repository::Repository];
	
	var softwareService : OVERVIEW::architecture::SoftwareService := csmRoot.architecture.cloudEnvironments.softwareLayer.services![id = moduleID];
	
	if(systemRoot = null) then{
		return;
	}endif;
	
	log("PCM System: " + systemRoot.entityName);
	
	softwareService.name := systemRoot.entityName;
	
	//datatypes
	csmRoot.dataTypes.types += repositoryRoot.dataTypes__Repository->map dataType2parameter();
	
	//interfaces
	softwareService.providedInterfaces := systemRoot.
									providedRoles_InterfaceProvidingEntity[pcm::repository::OperationProvidedRole]
									->map providedRole2OpInterface(softwareService);
	

	softwareService.requiredInterfaces := systemRoot.
									requiredRoles_InterfaceRequiringEntity[pcm::repository::OperationRequiredRole]
									->map requiredRole2OpInterface(softwareService);
									

	csmRoot.architecture.unresolvedOperationInterfaces += softwareService.requiredInterfaces;
	
	log("Transformation pcm2csmModule done!");
}

mapping pcm::repository::OperationSignature::operationSignature2operation() : OVERVIEW::application::Operation{
	
	name := self.entityName;
	
	aeMap += object OVERVIEW::core::AEEntry{
		key := PCM_OPERATION_KEY;
		value := self.oclAsType(ECORE::EObject);
	};
	
	self.parameters__OperationSignature.dataType__Parameter[REPOSITORY::PrimitiveDataType]->forEach(dataType){
		var primitiveType = dataType.getOverviewModelEquivalent(overviewInstance.rootObjects()![Overview].dataTypes);
		if(primitiveType <> null) then{
			parameters += primitiveType;
		}
		else{
			parameters += dataType.resolveoneIn(REPOSITORY::DataType::dataType2parameter, 
												OVERVIEW::parametertype::Parameter);
		}endif;
		
	};
																				 
	id := CSMID + self.id + '_operationSignature2operation';
}

mapping pcm::repository::OperationProvidedRole::providedRole2OpInterface(in parentSoftwareService : OVERVIEW::architecture::SoftwareService) : OVERVIEW::application::OperationInterface{

	name := self.providedInterface__OperationProvidedRole.entityName;
	providingContainer := parentSoftwareService;
	
	operations := Sequence{};
	operations += self.providedInterface__OperationProvidedRole.signatures__OperationInterface->map operationSignature2operation();
	
	aeMap += object OVERVIEW::core::AEEntry{
		key := PCM_INTERFACE_KEY;
		value := self.providedInterface__OperationProvidedRole.oclAsType(ECORE::EObject);
	};

	log("Providing OpInterface added: " + name);

	id := self.providedInterface__OperationProvidedRole.id + '_providedRole2OpInterface';
}

mapping pcm::repository::OperationRequiredRole::requiredRole2OpInterface(in parentSoftwareService : OVERVIEW::architecture::SoftwareService) : OVERVIEW::application::OperationInterface{
	
	name := self.requiredInterface__OperationRequiredRole.entityName;
	providingContainer := parentSoftwareService;
	
	operations := Sequence{};
	operations += self.requiredInterface__OperationRequiredRole.signatures__OperationInterface->map operationSignature2operation();

	aeMap += object OVERVIEW::core::AEEntry{
		key := PCM_INTERFACE_KEY;
		value := self.requiredInterface__OperationRequiredRole.oclAsType(ECORE::EObject);
	};

	log("Requiring OpInterface added: " + name);

	id := self.requiredInterface__OperationRequiredRole.id + '_providedRole2OpInterface';
}